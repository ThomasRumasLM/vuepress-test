stages:
  - update
  - token
  - test
  - release

variables:
  DIST_PATH: ./
  NPM_REGISTRY: https://adeo.jfrog.io/adeo/api/npm/npm/
  GITHUB_URL: git@github.com:adeo/integration-web-core--socle.git

.node:
  image: adeo-docker-public.jfrog.io/dockerfiles-collection/node-git:10-alpine
  before_script:
    - export USER=$ARTIFACTORY_USER
    - export PWD=$ARTIFACTORY_PWD
    - printf "registry=$NPM_REGISTRY\n_auth=\"$(echo -n $USER:$PWD | base64 | tr -d \\n)\"\nalways-auth=true\nemail=$GITHUB_USER_EMAIL" > .npmrc
    - cat .npmrc
    # install github private key
    - eval $(ssh-agent -s) && echo "$GITHUB_USER_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    # Fix detach HEADs, attach
    - git checkout -B "$CI_COMMIT_REF_NAME"
    - git config --global user.name "$GITHUB_USER_NAME"
    - git config --global user.email "$GITHUB_USER_EMAIL"
    - git remote set-url origin $GITHUB_URL || true
    - npm install
  tags:
    - adeo-cloud
    - factory
    - xl
  cache:
    key: "$CI_PROJECT_PATH_SLUG"
    paths:
      - node_modules

token-generator:
  stage: token
  extends: .node
  variables:
    BUILD_CMD: token
    COMMIT_MESSAGE: "chore(token): publish token"
  script:
    - npm run $BUILD_CMD
    - git checkout -- package-lock.json
    - git diff --exit-code --quiet || (git add js/assets/tokens css/assets/sass/_tokens freemarker/macros/tokens && git commit -m "$COMMIT_MESSAGE" && git push --set-upstream origin "$CI_COMMIT_REF_NAME")
  except:
    - tags
    - /^v[0-9]*

update:
  stage: update
  extends: .node
  variables:
    BUILD_CMD: update-dependencies
    COMMIT_MESSAGE: "chore(dependencies): update package.json dependencies"
  script:
    - npm run $BUILD_CMD
    - git checkout -- package-lock.json
    - git diff --exit-code --quiet || (git add . && git commit -m "$COMMIT_MESSAGE" && git push --set-upstream origin "$CI_COMMIT_REF_NAME")
  except:
    - tags
    - /^v[0-9]*

unit-tests:
  stage: test
  extends: .node
  variables:
    BUILD_CMD: test
  script:
    - npm run $BUILD_CMD

scss-linter:
  stage: test
  extends: .node
  variables:
    BUILD_CMD: stylelint
  script:
    - npm run $BUILD_CMD

js-linter:
  stage: test
  extends: .node
  variables:
    BUILD_CMD: eslint
  script:
    - npm run $BUILD_CMD

.publish:
  stage: release
  extends: .node
  script:
    - git checkout -- package-lock.json
    - npm run $BUILD_CMD
  only:
    - master
  when: manual

publish-major:
  extends: .publish
  stage: release
  variables:
    BUILD_CMD: lerna publish major -- --yes

publish-minor:
  extends: .publish
  stage: release
  variables:
    BUILD_CMD: lerna publish minor -- --yes

publish-patch:
  extends: .publish
  stage: release
  variables:
    BUILD_CMD: lerna publish patch -- --yes

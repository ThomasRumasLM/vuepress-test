@import 'node_modules/@mozaic-ds/styles/components/c.checkbox';

.#{map-get($checkbox, class)} {
  -webkit-appearance: none;

  &#{map-get($checkbox, input)} {
    -webkit-appearance: none;
  }
}

.#{map-get($checkbox, lmClass)} {

  &#{map-get($checkbox, suffixLabel)} {
    color: $grey-500;
    cursor: pointer;
  }
}

.km-checkbox-wrapper {
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  position: relative;
  // Element
  &__input {
    @include resetInput;

    width: px-to-rem(18);
    height: px-to-rem(18);
    border: get-border(m) solid $color-form-checkbox-border;
    border-radius: get-border-radius(m);
    cursor: pointer;
    flex: 0 0 auto;

    &.is-valid {
      @include inputValidStyle;
    }

    &.is-invalid {
      @include inputInvalidStyle;
    }

    &:valid,
    &:invalid {
      box-shadow: none;
    }

    &:checked {
      @include inputCheckedStyle;

      background: $color-form-checkbox-background-is-checked;
    }

    &:disabled {
      @include inputDisabledStyle;
    }

    &:focus,
    &:focus:checked {
      @include inputFocusStyle;
    }

    // ie11 fix
    &::-ms-check {
      border-radius: get-border-radius(m);
      border: get-border(m) solid $color-form-checkbox-border;
    }

    &:checked::-ms-check {
      @include inputCheckedStyle;

      background: $color-form-checkbox-background-is-checked;
      border-color: $color-form-checkbox-background-is-checked;
      color: $color-form-checkbox-background-is-checked;
      border-radius: get-border-radius(m);
    }
  }
  // Element
  &__ico {
    position: absolute;
    left: 1px;
    top: 50%;
    transform: translateY(-50%);
    fill: $white;
    display: none;
    pointer-events: none;

    :checked ~ & {
      display: block;
    }
  }
  // Element
  &__label {
    @include labelStyle;

    margin: 0 0 0 $mu075;
    cursor: pointer;

    :checked ~ & {
      @include labelCheckedStyle;
    }

    :hover ~ & {
      @include labelHoverStyle;
    }
  }

  &__suffix-label {
    color: $grey-500;
    cursor: pointer;
  }
}
